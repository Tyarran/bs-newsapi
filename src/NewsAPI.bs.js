// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Source = require("./Source.bs.js");
var Article = require("./Article.bs.js");
var Fetcher = require("./Fetcher.bs.js");
var Parameter = require("./Parameter.bs.js");

function make(apiKey) {
  return {
          apiKey: apiKey
        };
}

function topHeadlines(api, parameters) {
  var querystring = Parameter.buildQuerystring(undefined, parameters);
  return Fetcher.fetchArticles(api.apiKey, /* TopHeadlines */0, querystring).then(function (response) {
              return Promise.resolve($$Array.map(Article.fromAPI, response.articles));
            });
}

function everything(api, parameters) {
  var querystring = Parameter.buildQuerystring(undefined, parameters);
  return Fetcher.fetchArticles(api.apiKey, /* Everything */1, querystring).then(function (response) {
              return Promise.resolve($$Array.map(Article.fromAPI, response.articles));
            });
}

function sources(api, parameters) {
  var querystring = Parameter.buildQuerystring(undefined, parameters);
  return Fetcher.fetchSources(api.apiKey, /* Sources */2, querystring).then(function (response) {
              return Promise.resolve($$Array.map(Source.fromAPI, response.sources));
            });
}

exports.make = make;
exports.topHeadlines = topHeadlines;
exports.everything = everything;
exports.sources = sources;
/* Fetcher Not a pure module */
